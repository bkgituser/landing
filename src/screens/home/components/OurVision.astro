---
import { Trans } from 'astro-i18next/components'
import { t } from 'i18next'
import Placeholder from '../../../img/placeholder-ourvision.png'
import VideoBackground from '../../../components/template/VideoBackground.astro'
// https://ik.imagekit.io/6f82hwfl4/
---

<section id="our-vision" class="relative h-screen">
	<VideoBackground
		video="/assets/videos/our-vision.mp4"
		autoplay={false}
		placeholder={Placeholder.src}
		muted={false}
		id="our-vision-video"
		preload="none"
	>
		<div
			class="videoMask absolute inset-0 h-full w-full bg-[linear-gradient(180deg,_rgba(0,_0,_0,_0.00)_0%,_rgba(0,_0,_0,_0.40)_100%)]"
		>
			<div
				class="container relative z-10 mx-auto flex h-full flex-col items-start justify-center px-8 md:px-0 xl:px-16"
			>
				<div class="content relative z-10 xl:w-3/4">
					<p class="ourvision-line py-8 text-lg font-semibold text-white md:text-2xl">
						{t('landing.ourVision.badge')}
					</p>
					<span class="ourvision-line block w-5 border-2 border-white md:w-10"></span>
					<h3 class="ourvision-line py-4 text-2xl font-semibold text-white md:text-plusMid">
						{t('landing.ourVision.title')}
					</h3>
					{
						t('landing.ourVision.description')
							.split('\n')
							.map((line) => (
								<p class="ourvision-line text-justify text-xl text-white md:text-4xl xl:leading-[2.5rem]">
									{line}
								</p>
							))
					}

					<div class="mt-10 md:mt-20">
						<button
							class="ourvision-line playButton flex items-center gap-4 bg-black px-8 py-2 text-white md:px-12 md:py-4"
						>
							<img
								src="/assets/icons/play.svg"
								alt="play"
								class="h-4 w-4 md:h-auto md:w-auto"
								loading="lazy"
							/>
							<p class="text-base font-semibold md:text-xl">{t('landing.ourVision.button')}</p>
						</button>
					</div>
				</div>
			</div>
		</div>
	</VideoBackground>
</section>
<script>
	const playButton = document.querySelector('.playButton')
	const mask = document.querySelector('.videoMask')
	const video = document.getElementById('our-vision-video')

	playButton.addEventListener('click', function () {
		if (video instanceof HTMLVideoElement) {
			mask.classList.add('hidden')
			video.play()
			toggleControls()
		}
	})

	video.addEventListener('pause', function () {
		mask.classList.remove('hidden')
		toggleControls()
	})

	function toggleControls() {
		if (video.hasAttribute('controls')) {
			video.removeAttribute('controls')
		} else {
			video.setAttribute('controls', 'controls')
		}
	}
</script>
<style>
	@media (min-width: 480px) and (max-width: 1600px) and (max-height: 900px) {
		.container {
			max-width: none;
			padding-left: 6rem;
			padding-right: 6rem;
		}
	}
</style>
