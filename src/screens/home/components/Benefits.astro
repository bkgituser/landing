---
import FullVideoBg from '../../../components/template/VideoBackground.astro'
import { t } from 'i18next'

const data = [
	{
		label: 'landing.benefits.item1.featureLine',
		data: 'landing.benefits.item1.description'
	},
	{
		label: 'landing.benefits.item2.featureLine',
		data: 'landing.benefits.item2.description'
	},
	{
		label: 'landing.benefits.item3.featureLine',
		data: 'landing.benefits.item3.description'
	},
	{
		label: 'landing.benefits.item4.featureLine',
		data: 'landing.benefits.item4.description'
	},
	{
		label: 'landing.benefits.item5.featureLine',
		data: 'landing.benefits.item5.description'
	},
	{
		label: 'landing.benefits.item6.featureLine',
		data: 'landing.benefits.item6.description'
	}
]
---

<section id="benefits" class="h-screen overflow-hidden">
	<FullVideoBg video="/assets/videos/video-benefits.mp4" autoplay={true}>
		<div
			class="mx-auto flex h-full bg-[linear-gradient(180deg,_rgba(0,_0,_0,_0.00)_0%,_rgba(0,_0,_0,_0.40)_100%)] p-8 lg:p-32"
			id="benefit-slide"
		>
			<div class="benefits-description flex w-full flex-col items-center justify-end">
				<div class="relative mb-10 w-full">
					{
						data.map((item, idx) => {
							return (
								<div data-display-element={idx} class="item bottom-100 absolute bottom-[100%]">
									<span class="mb-2 block w-10 border-2 border-white" />
									{t(item.data)
										.split('\n')
										.map((description) => {
											return (
												<>
													<p class="text-left text-plusMid font-bold leading-6 text-white md:text-3xl lg:leading-10 xl:text-plusMid">
														{description}
													</p>
												</>
											)
										})}
								</div>
							)
						})
					}
				</div>
				<div class="benefits-index hidden w-full items-center justify-between md:flex">
					{
						data.map((item, idx) => {
							return (
								<div
									data-index-element={idx}
									class="item-benefit  relative flex h-[120px] w-[189px] cursor-pointer flex-col items-center justify-center text-xl text-white transition-all duration-300 ease-in md:h-[85px] md:w-[140px] xl:h-[120px] xl:w-[189px]"
								>
									<div class="item-data relative z-20 ">
										{t(item.label)
											.split('\n')
											.map((description) => {
												return (
													<p
														style={{ lineHeight: '0rem !important' }}
														class="xl:leading-[1.1rem]! my-0 px-4 py-2 text-left text-lg md:text-base md:leading-[0.8rem] xl:text-lg xxl:text-xl"
													>
														{description}
													</p>
												)
											})}
									</div>
								</div>
							)
						})
					}
				</div>
			</div>
		</div>
	</FullVideoBg>
</section>
<script>
	import ShowOnHover from '../../../scripts/showElementOnHover'
	const fadeSlider = new ShowOnHover('#benefit-slide', {
		activeClass: 'item-benefit-active',
		speed: 1500,
		autoplay: true,
		delay: 5000
	})
</script>
<style>
	.item-benefit:before {
		content: '';
		position: absolute;
		inset: 0;
		background: #fff;
		overflow: hidden;
		clip-path: polygon(
			0 30px,
			30px 0,
			100% 0,
			100% 100%,
			0 100%,
			0 30px,
			1px calc(30px + 0.83px),
			1px calc(100% - 1px),
			calc(100% - 1px) calc(100% - 1px),
			calc(100% - 1px) 1px,
			calc(30px + 0.83px) 1px,
			1px calc(30px + 0.83px)
		);
	}

	.item-benefit:after {
		content: '';
		position: absolute;
		inset: 0;
		background: rgba(0, 0, 0, 0.2);
		--mask: linear-gradient(135deg, #0000 21.28px, #000 0);
		-webkit-mask: var(--mask);
		mask: var(--mask);
		transition: all ease-in 300ms;
	}

	.item-benefit-active {
		transition: all 300ms ease;
		font-weight: 500;
		color: #000;
	}

	.item-benefit-active:after {
		background: #fff;
	}

	@media (max-width: 1600px) and (max-height: 720px) {
		#benefit-slide {
			padding: 3rem 8rem;
		}
	}
</style>
