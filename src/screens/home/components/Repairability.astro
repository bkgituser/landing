---
import { t } from 'i18next'
---

<section class="min-h-screen bg-white" id="repairability">
	<div
		class="md:container-screen flex flex-col-reverse flex-wrap items-start justify-between gap-16 pb-14 pt-10 md:pb-28 md:pt-32 lg:flex-row lg:gap-0 xl:pt-48"
	>
		<div class="container-screen md:px-auto mb-24 px-10 sm:px-20 md:px-0 lg:mb-0 lg:w-2/5 xl:w-1/2">
			<div class="hidden lg:block">
				<h3 class="repairability-title text-2xl font-semibold text-black opacity-0 md:text-4xl">
					{t('landing.repairability.title')}
				</h3>
			</div>
			<div class="mt-5 hidden md:mt-4 lg:block">
				<p
					class="repairability-description text-left text-2xl opacity-0 md:max-w-[450px] lg:max-w-[345px]"
				>
					{t('landing.repairability.description')}
				</p>
			</div>
			<div class="repairability-arrow hidden h-40 items-center opacity-0 lg:flex">
				<img src="/assets/icons/arrow.svg" alt="arrow" loading="lazy" />
			</div>
			<div class="flex-start flex flex-wrap gap-4">
				<button
					class="w-full bg-black px-4 py-4 text-[10.38px] font-semibold text-white md:w-[165px] lg:px-0"
				>
					{t('landing.repairability.downloadButton1')}
				</button>
				<button
					class="w-full bg-black px-4 py-4 text-[10.38px] font-semibold text-white md:w-[165px] lg:px-0"
				>
					{t('landing.repairability.downloadButton2')}
				</button>
			</div>
		</div>
		<div class="container-screen lg:max-w-unset h-full w-full lg:w-3/5 lg:px-0 xl:w-1/2">
			<div class="px-10 lg:hidden">
				<h3 class="repairability-title text-2xl font-semibold text-black opacity-0 md:text-4xl">
					{t('landing.repairability.title')}
				</h3>
			</div>
			<div class="repairability-arrow flex h-16 items-center px-12 opacity-0 lg:hidden">
				<img src="/assets/icons/arrow.svg" alt="arrow" loading="lazy" />
			</div>
			<div class="content mx-auto mb-3 block w-full bg-[#EEEEEE] p-2">
				<video
					autoplay={true}
					loop
					playsinline
					class="object-contain xl:min-h-[423px] xl:object-fill"
					muted={true}
					preload="metadata"
				>
					<source src="/assets/videos/repairability_summary.mp4" type="video/mp4" />
				</video>

				<!-- HIDDEN VIDEO -->
				<div class="video-wrapper z-full absolute hidden h-full w-full">
					<button class="absolute right-5 top-5 text-3xl text-white drop-shadow-lg"> X </button>
					<video
						id="repairability-full"
						class="absolute h-full w-full"
						width="100%"
						height="100%"
						muted={true}
						preload="none"
					>
						<source src="/assets/videos/repairability-full.mp4" type="video/mp4" />
					</video>
				</div>
			</div>
			<div class="my-8 flex items-center justify-center px-5">
				<button
					class="play-hidden-video flex h-[42px] w-[164px] items-center gap-4 border-[1px] border-black px-2 py-2 text-black md:h-auto md:w-auto md:basis-auto"
				>
					<img
						src="/assets/icons/play-black.svg"
						alt="play"
						class="h-4 w-4 md:h-auto md:w-auto"
						loading="lazy"
					/>
					<p class="mt-1 text-base font-semibold md:text-xl">
						{t('landing.ourVision.button')}
					</p>
				</button>
				<p class="mt-2 basis-1/2 text-center text-base text-[#A0A0A0]">
					{t('landing.repairability.longVersionButton')}
				</p>
			</div>
		</div>
	</div>
</section>
<script>
	const playButton = document.querySelector('.play-hidden-video')
	const videoWrapper = document.querySelector('.video-wrapper')
	const fullVideo = document.getElementById('repairability-full') as HTMLVideoElement

	playButton.addEventListener('click', () => {
		videoWrapper.classList.remove('hidden')
		if (fullVideo.requestFullscreen) {
			fullVideo.requestFullscreen()
		}
	})

	let isFullscreen = false

	fullVideo.onfullscreenchange = function (e) {
		isFullscreen = !isFullscreen

		if (isFullscreen) {
			fullVideo.play()
		} else {
			console.log('exits fullscreen')
			fullVideo.pause()

			videoWrapper.classList.add('hidden')
		}
	}
</script>
<style>
	@media (max-height: 480px) {
		.container-screen {
			margin-top: 3.5rem;
		}

		p {
			max-width: 70%;
		}

		button {
			width: auto;
		}
	}
	@media (min-width: 480px) and (max-width: 1600px) and (max-height: 900px) {
		.container {
			max-width: none;
			padding-left: 6rem;
			padding-right: 6rem;
		}
	}
</style>
