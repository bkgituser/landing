---
import ImageBackground from 'src/components/template/ImageBackground.astro'

import { getImage } from 'astro:assets'
import ProductDisplay from 'src/components/molecules/ProductDisplay.astro'
import BgImg1 from 'src/img/lineup1.webp'
import BgImgMobile1 from 'src/img/lineup1-mobile.png'
import BgImg2 from 'src/img/lineup2.webp'
import BgImgMobile2 from 'src/img/lineup2-mobile.png'
import BgImg3 from 'src/img/lineup3.webp'
import BgImgMobile3 from 'src/img/lineup3-mobile.png'
import BgImg4 from 'src/img/lineup4.webp'
import BgImgMobile4 from 'src/img/lineup4-mobile.png'
import BgImg5 from 'src/img/lineup5.webp'
import BgImgMobile5 from 'src/img/lineup5-mobile.png'
import { Trans } from 'astro-i18next/components'
import CustomSlider from '@components/organisms/slider/CustomSlider.astro'
import SliderElements from '@components/organisms/slider/SliderElements.astro'
import IndexElements from '@components/organisms/slider/IndexElements.astro'

const productsData = [
	{
		modelTitle: 'landing.productsLineup.products.item1.model',
		technical: 'landing.productsLineup.products.item1.technical',
		compatible: 'landing.productsLineup.products.item1.compatible',
		mobile: 'landing.productsLineup.products.item1.mobile',
		description: 'landing.productsLineup.products.item1.description',
		image: BgImg1,
		mobileImg: BgImgMobile1,
		smallBg: '/assets/imgs/lineup1-sm.webp'
	},
	{
		modelTitle: 'landing.productsLineup.products.item2.model',
		technical: 'landing.productsLineup.products.item2.technical',
		compatible: 'landing.productsLineup.products.item2.compatible',
		mobile: 'landing.productsLineup.products.item2.mobile',
		description: 'landing.productsLineup.products.item2.description',
		image: BgImg2,
		mobileImg: BgImgMobile2,
		smallBg: '/assets/imgs/lineup2-sm.webp'
	},
	{
		modelTitle: 'landing.productsLineup.products.item3.model',
		technical: 'landing.productsLineup.products.item3.technical',
		compatible: 'landing.productsLineup.products.item3.compatible',
		mobile: 'landing.productsLineup.products.item3.mobile',
		description: 'landing.productsLineup.products.item3.description',
		image: BgImg3,
		mobileImg: BgImgMobile3,
		smallBg: '/assets/imgs/lineup3-sm.webp'
	},
	{
		modelTitle: 'landing.productsLineup.products.item4.model',
		technical: 'landing.productsLineup.products.item4.technical',
		compatible: 'landing.productsLineup.products.item4.compatible',
		mobile: 'landing.productsLineup.products.item4.mobile',
		description: 'landing.productsLineup.products.item4.description',
		image: BgImg4,
		mobileImg: BgImgMobile4,
		smallBg: '/assets/imgs/lineup4-sm.webp'
	},
	{
		modelTitle: 'landing.productsLineup.products.item5.model',
		technical: 'landing.productsLineup.products.item5.technical',
		image: BgImg5,
		mobileImg: BgImgMobile5,
		smallBg: '/assets/imgs/lineup5-sm.webp'
	}
]

const models = ['32m', '36m', '40m', '44m', '48m']
const id = 'lineup-slider'
---

<section id="products-line-up" class="relative h-screen">
	<div class="lineup-sizes font-2xl absolute z-50 h-32 w-32 text-red-500">HOLA</div>
	<CustomSlider
		id={id}
		lengthElements={productsData.length}
		customSliderClass="gap-4"
		customSliderContainerClass="px-4 mb-4 sm:mb-0 relative"
		classWrapper="dark-item"
		activeColor="black"
		colorInactive="rgba(0,0,0,0.2)"
	>
		<div
			class="title-lineup relative left-1/2 z-20 mx-auto w-full -translate-x-1/2 gap-3 pt-20"
			slot="prev-slider-timer"
		>
			<h2 class="mb-1 text-center text-xl xs:text-2xl">
				<Trans i18nKey="landing.productsLineup.title">
					<strong>PRODUCTS LINEUP</strong> - BK BOOMS
				</Trans>
			</h2>
		</div>
		<IndexElements
			id={id}
			customClass="h-[55px] px-4 justify-between sm:justify-center z-40 gap-2 md:px-8"
		>
			{
				models.map((model, index) => {
					return (
						<div
							class={`item-model relative flex h-[54px] w-[79px] cursor-pointer flex-col items-center justify-center text-lg transition-all duration-300 ease-in  md:h-[85px] md:w-[123px] md:text-xl`}
						>
							<p class="item-data font-mid relative">{model}</p>
							{index !== models.length - 1 && (
								<span class="spacer absolute -right-1 top-1/2 h-4 w-[1px] -translate-y-1/2 bg-black" />
							)}
						</div>
					)
				})
			}
		</IndexElements>
		<SliderElements id={id} isBackground={true}>
			{
				productsData.map((modelData, index) => {
					return <ProductDisplay {...modelData} index={index} />
				})
			}
		</SliderElements>
	</CustomSlider>
</section>
<script>
	const elementT: HTMLElement = document.querySelector('.lineup-sizes')

	window.addEventListener('load', () => {
		elementT.innerText = `width: ${window.innerWidth}, height: ${window.innerHeight}`
	})
</script>
<style>
	@media (max-height: 740px) {
		.title-lineup {
			padding-top: 2.5rem;
		}
	}
	@media (max-height: 480px) {
		.overlay-screen {
			overflow: hidden;
		}

		.ext-black {
			justify-content: center;
			align-items: center;
			top: 36px;
		}
		h3 {
			font-size: 2rem;
		}

		p {
			font-size: 1rem;
		}
	}
	/* INDEX BOX MODEL */
	.item-index-active:before {
		content: '';
		position: absolute;
		inset: 0;
		background: rgba(0, 0, 0, 0.5);
		overflow: hidden;
		clip-path: polygon(
			0 0,
			100% 0,
			100% 100%,
			20px 100%,
			0 calc(100% - 20px),
			0 0,
			1px 1px,
			1px calc(100% - 20px - 0.41px),
			calc(20px + 0.41px) calc(100% - 1px),
			calc(100% - 1px) calc(100% - 1px),
			calc(100% - 1px) 1px,
			1px 1px
		);
	}

	.item-index-active:after {
		content: '';
		position: absolute;
		inset: 0;
		background: rgba(255, 255, 255, 0.2);
		--mask: linear-gradient(45deg, #0000 14.28px, #000 0);
		-webkit-mask: var(--mask);
		mask: var(--mask);
		mask: var(--mask);
		transition: all ease-in 300ms;
	}

	.item-index-active {
		font-weight: bold;
	}

	@media (max-width: 768px) {
		.item-index-active:before {
			content: '';
			position: absolute;
			inset: 0;
			background: rgba(0, 0, 0, 0.5);
			overflow: hidden;
			clip-path: polygon(
				0 0,
				100% 0,
				100% 100%,
				14px 100%,
				0 calc(100% - 14px),
				0 0,
				1px 1px,
				1px calc(100% - 14px - 0.41px),
				calc(14px + 0.41px) calc(100% - 1px),
				calc(100% - 1px) calc(100% - 1px),
				calc(100% - 1px) 1px,
				1px 1px
			);
		}

		.item-index-active:after {
			content: '';
			position: absolute;
			inset: 0;
			background: rgba(255, 255, 255, 0.2);
			--mask: linear-gradient(45deg, #0000 11.28px, #000 0);
			-webkit-mask: var(--mask);
			mask: var(--mask);
			mask: var(--mask);
			transition: all ease-in 300ms;
		}

		.item-index-active {
			font-weight: bold;
		}
	}

	/* LANDSCAPE */
	@media (max-height: 480px) {
		.title-lineup {
			padding-top: 1rem !important;
		}
	}

	/* @media (min-width: 1150px) and (max-width: 1440px) {
		.container-screen {
			padding-bottom: 0;
		}
	} */
</style>
