---
import { t } from 'i18next'

const columns = [
	{
		label: 'landing.highlights.item1.label',
		content: 'landing.highlights.item1.content'
	},
	{
		label: 'landing.highlights.item2.label',
		content: 'landing.highlights.item2.content',
		button: 'landing.highlights.item2.button'
	},
	{
		label: 'landing.highlights.item3.label',
		content: 'landing.highlights.item3.content'
	},
	{
		label: 'landing.highlights.item4.label',
		content: 'landing.highlights.item4.content'
	}
]
---

<section class="min-h-screen bg-white" id="highlights">
	<div class="container mx-auto px-4 pt-16 md:px-0 lg:pb-28 lg:pt-32 xl:px-10 xl:pt-48">
		<div>
			<h3 class="highlight-title opacity-0">
				<span class="bg-black p-4 text-mid font-bold text-white">
					{t('landing.highlights.title')}
				</span>
			</h3>
		</div>
		<div class="flex h-32 items-center lg:h-48">
			<img src="/assets/icons/arrow.svg" alt="arrow" class="ml-6" loading="lazy" />
		</div>
		<div class="flex flex-wrap items-start justify-between p-6 md:p-0 xl:p-6">
			{
				columns.map((col, index) => (
					<div class="column-highlight relative mb-12 opacity-0 md:max-w-[204px] xl:max-w-[300px] ">
						<div class="mb-4 text-2xl font-bold">{t(col.label)}</div>
						<p
							class={`text-justify text-xl text-black ${index !== columns.length - 1 ? 'after:border-black-200 after:absolute after:top-10 after:h-[160px] after:border-r-2 after:content-[""] md:after:-right-[12%] xl:after:-right-[20%]' : ''} `}
						>
							{t(col.content)}
						</p>
						{col?.button ? (
							<button class="mt-8 rounded-lg bg-black px-6 py-4 font-bold text-white">
								{t(col.button)}
							</button>
						) : null}
					</div>
				))
			}
		</div>
	</div>
</section>
