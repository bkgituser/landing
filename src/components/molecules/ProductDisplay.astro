---
import ImageBackground from '../template/ImageBackground.astro'
import { t } from 'i18next'

import { getImage } from 'astro:assets'
const { modelTitle, description, technical, image, index } = Astro.props
const optimizedBackground = await getImage({ src: image, format: 'webp' })
---

<div data-display-element={index} class="absolute z-10 h-screen w-full">
	<div class="h-full">
		<ImageBackground desktpBg={optimizedBackground}>
			<div class="relative z-30 flex h-full items-end justify-start text-black">
				<div class="z-40 w-full px-8 pb-12 md:px-16 xl:max-w-none xl:px-32">
					<div class="mask"></div>
					<span class="mb-2 block w-4 border-2 border-white md:w-8"></span>
					<h3 class="pb-2 text-3xl font-bold text-white md:pb-1 md:text-5xl xl:pb-2">
						{t(modelTitle)}
					</h3>
					<p class="pt-2 text-xl font-semibold leading-4 text-white md:text-2xl xl:pt-4">
						{t(technical)}
					</p>
					<p class="mb-3 pt-2 text-base text-white md:text-2xl lg:w-2/3 xl:mb-6 xl:pt-4">
						{t(description)}
					</p>
					<button class="font-sm bg-black px-6 py-2 text-white xxl:px-8 xxl:py-4">
						{t('landing.productsLineup.products.downloadBtn')}
					</button>
				</div>
			</div>
		</ImageBackground>
	</div>
</div>
<style>
	.mask {
		position: relative;
	}
	.mask::after {
		content: '';
		position: absolute;
		height: 100%;
		bottom: 0;
		left: 0;
		background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4) 100%);
		z-index: 20;
		width: 100%;
	}
</style>
