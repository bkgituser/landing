---
import ImageBackground from '../template/ImageBackground.astro'
import { t } from 'i18next'

import { getImage } from 'astro:assets'
const { featureTitle, description, asterix, image, badge, direction = 'right' } = Astro.props
const optimizedBackground = await getImage({ src: image, format: 'webp' })
---

<div class="absolute z-10 h-full w-full">
	<div class="h-full">
		<ImageBackground desktpBg={optimizedBackground} extraClassImg="object-cover lg:object-cover ">
			<div
				class="relative z-20 mx-auto flex h-full items-end justify-start bg-[linear-gradient(180deg,_transparent_0%,_rgba(0,0,0,0.6)_100%)] text-black"
			>
				<div
					class={`display-data-container select-none md:mb-0 ${direction === 'right' ? 'flex flex-col items-end justify-start' : 'flex flex-col items-start justify-start'} w-full pb-12 md:py-24 px-6  md:px-28	`}
				>
					{
						badge ? (
							<p class="pb-2 text-xl font-bold text-white">{t(badge)}</p>
						) : (
							<div class="h-16" />
						)
					}
					<span class="mb-2 block w-9 border-2 border-white"></span>
					<h3
						class={` ${direction === 'right' ? 'text-right' : 'text-left'} text-plusMid font-bold text-white leading-10`}
					>
						{
							t(featureTitle)
								.split('\n')
								.map((line, index) => (
									<>
										{index !== 0 && <br />}
										{line}
									</>
								))
						}
					</h3>
					<p
						class={`${direction === 'right' ? 'text-right' : 'text-left'} min-h-32 mb-1 lg:w-1/2 pt-4 text-2xl text-white`}
					>
						{t(description)}
					</p>
					{asterix && <p class="mt-2 text-base text-white md:mt-12 md:text-lg">{t(asterix)}</p>}
				</div>
			</div>
		</ImageBackground>
	</div>
</div>
<style>
	@media (min-width: 480px) and (max-width: 1600px) and (max-height: 750px) {
		.display-data-container {
			padding: 1rem 3rem;
		}
	}

	@media (min-width: 480px) and (max-width: 1600px) and (max-height: 700px) {
		.display-data-container {
			padding: 1rem 6.6rem;
		}
	}
</style>
